<----------------TOPICS CONERED---------------------->
- Nesting of loops -> Give an idea about how nesting of loops works
- break, continue  keyword



1. Nesting of Loops
Nesting of loops means placing one loop inside another. This is useful when you need to perform repetitive tasks in a multi-dimensional structure (e.g., working with 2D arrays, matrices, or grids).

How Nesting Works:
The outer loop runs first, and for each iteration of the outer loop, the inner loop runs completely.

The total number of iterations is the product of the iterations of the outer and inner loops.


Example:

for (int i = 1; i <= 3; i++) {          // Outer loop
    for (int j = 1; j <= 2; j++) {      // Inner loop
        System.out.println("i = " + i + ", j = " + j);
    }
}

Output:
i = 1, j = 1
i = 1, j = 2
i = 2, j = 1
i = 2, j = 2
i = 3, j = 1
i = 3, j = 2


2. Break Keyword
The break keyword is used to exit a loop or a switch statement immediately. It is often used to stop a loop when a certain condition is met.

Example:
for (int i = 1; i <= 10; i++) {
    if (i == 5) {
        break; // Exit the loop when i == 5
    }
    System.out.println(i);
}



3. Continue Keyword
The continue keyword is used to skip the current iteration of a loop and move to the next iteration. It is often used to skip specific values or conditions.
for (int i = 1; i <= 5; i++) {
    if (i == 3) {
        continue; // Skip the iteration when i == 3
    }
    System.out.println(i);
}



5. Key Differences Between Break, Continue
Keyword	         Usage	                                                        Effect
break	         Exits the loop or switch statement	                            Stops the loop or switch immediately
continue	     Skips the current iteration of the loop	                    Moves to the next iteration of the loop

