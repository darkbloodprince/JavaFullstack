/*Count And Say
Find the nth term in Count and Say Sequence. The count-and-say sequence is the sequence of the below integers: 1, 11, 21, 1211, 111221, 312211, 13112221, 1113213211, …

The nth term of the series is generated by reading (n-1)’th term.

The first term is "1".

The second term is "11", generated by reading the first term as "One 1" (There is one 1 in the previous term)

The third term is "21", generated by reading the second term as "Two 1"

The fourth term is "1211", generated by reading the third term as "One 2 One 1"

and so on

Input Format
The only line contains a single integers N.

Output Format
Return a string depicting the nth term of the series.

Example 1
Input

3
Output

21
Explanation

The third term of series is 21.

Example 2
Input

5
Output

111221
Explanation

The fifth term of series is 111221.

Constraints
1 <= n <= 30*/
import java.io.*;
import java.util.*; 

class Main{
    public static void main(String args[]) throws IOException { 
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(read.readLine());
        
        Solution ob = new Solution();
        
        System.out.println(ob.countandsay(n));
    } 
} 
class CountAndSay {
    public String countandsay(int n) {
        if (n == 1) return "1";
        
        String result = "1";
        
        for (int i = 2; i <= n; i++) {
            StringBuilder current = new StringBuilder();
            int count = 1;
            for (int j = 1; j < result.length(); j++) {
                if (result.charAt(j) == result.charAt(j - 1)) {
                    count++;
                } else {
                    current.append(count).append(result.charAt(j - 1));
                    count = 1;
                }
            }
            current.append(count).append(result.charAt(result.length() - 1));
            result = current.toString();
        }
        
        return result;
    }
}